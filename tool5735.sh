#!/bin/bash

# Η γενική ίδεα είναι να χρησιμοποιήσουμε το if..elif..fi statement και με την "συνθήκη" που υπάρχει εντός των παρενθέσεων καθενός if..elif, θα ελέγξουμε αν οι παράμετροι των εντολών που θέλουμε να εκτελεσουμε ταυτίζονται με τα expressions του if..elif statement. Αν η συνθήκη είναι True, τότε εκτελείται το αντίστοιχο κομμάτι κώδικα, το οποίο θα μας εμφανίζει διάφορα στοιχεία καταγραφής των χρηστών του αρχείου event.dat.

# Κάθε φορά που χρησιμοποιούμε το pipe |, τότε αυτό μεταφέρει την έξοδο από την εκτέλεση μιας εντολής σε μιαν άλλη για περαιτέρω επεξεργασία από τη νέα εντολή.
# Με την εντολή ( tr '|' ' ' ) αντικαθηστούμε τις κάθετες γραμμές που υπάρχουν μέσα στο αρχείο με κενά.
# Στο ερώτημα 3 στο statement του elif έχουμε λάβει υπόψιν ότι οι παράμετροι της εντολής μπορεί να δίνονται με διαφορετική σείρα, όμως και πάλι θα εμφανίζει το ίδιο επιθυμητό αποτέλεσμα.

if [ "$1" = "-f" -a "$2" = "event.dat" -a "$3" = "-id" ]; then
	less event.dat | grep $4 | tr '|' ' ' | awk '{print $2 ',' $3 ',' $5}' 
# Ερώτημα 2. Με την εντολή less διαβάζουμε το περιεχόμενο του αρχείου event.dat. Στην συνέχεια με το φίλτρο grep αναζητάμε στο συγκεκριμένο αρχείο τα στοιχεία του χρήστη που ταυτίζονται με το id που πληκτρολογήσαμε στην εκτέλεση της εντολής. Τέλος, με την συγκεκριμένη εντολή awk τυπώνουμε μόνο τις συγκεκριμένες στήλες του αρχείου event.dat, οι οποίες είναι όνομα, επώνυμο, ημερομηνία γέννησης.

elif [ "$1" = "-id" -a "$3" = "-f" -a "$4" = "event.dat" ]; then
	less event.dat | grep $2 | tr '|' ' ' | awk '{print $2 ',' $3 ',' $5}' 
# Ερώτημα 2. Στην περίπτωση που οι παράμετροι της εντολής δωθούν με διαφορετική σειρά, τυπώνουμε και πάλι τα ίδια στοιχεία του χρήστη απο το αρχείο event.dat.  

elif [ "$1" = "-f" -a  "$3" = "" ]; then
	less event.dat | grep ^[^#] | tr '|' ' ' 
# Ερώτημα 1β. Εκτυπώνουμε όλα τα στοιχεία του αρχείου χωρίς τα σχόλια. Η συγκεκριμένη εντολή grep εμφανίζεται κανονικά όλα τα στοιχεία του event.dat, χωρίς όμως τα σχόλια, δηλαδή οι γραμμές που περιέχουν το σύμβολο #.

elif [ "$1" = "--firstnames" ] || [ "$3" = "--firstnames" ]; then
	less event.dat | tr '|' ' ' | awk '{print $3} ' | sort 
# Ερώτημα 3α. Οι εντολές less και tr εξηγήθηκαν παραπάνω. Με την συγκεκριμένη εντολή awk τυπώνουμε όλα τα ονόματα του αρχείου event.dat. Στην συνέχεια με την εντολή sort τα ταξινομούμε σε αλφαβητική σειρά.	

elif [ "$1" = "--lastnames" ] || [ "$3" = "--lastnames" ]; then
        less event.dat | tr '|' ' ' | awk '{print $2} ' | sort 
# Ερώτημα 3β. Οι εντολές less και tr εξηγήθηκαν παραπάνω. Με την συγκεκριμένη εντολή awk τυπώνουμε όλα τα επώνυμα του αρχείου event.dat. Στην συνέχεια με την εντολή sort τα ταξινομούμε σε αλφαβητική σειρά.	

elif [ "$1" = "--socialmedia" ] || [ "$3" = "--socialmedia" ]; then
	 less event.dat  | grep ^[^#] | tr '|' ' ' | sort | uniq -c | tail -14 
# Ερώτημα 5. Οι εντολές less, grep και tr εξηγήθηκαν παραπάνω. Με την εντολή του sort τα ταξινομούμε τα στοιχεία του αρχείου. Η εντολή uniq μετρά της επαναλαμβανόμενες γραμμές και για κάθε στοιχείο εμφανίζει δίπλα του τον αριθμό των χρηστών που είναι εγγεγραμμένοι. Τέλος, με την συγκεκριμένη εντολή tail τυπώνουμε μόνο τις τελευταίες 14 γραμμές, οι οποίες περιέχουν όλα τα socialmedia στα οποία είναι εγγεγραμένοι οι χρήστες. Δίπλα από κάθε socialmedia εμφανίζεται ο αριθμός των χρηστών που είναι εγγεγραμένοι στο συγκεκριμένο socialmedia. 

else
	echo "5735-6179" 
# Ερώτημα 1α. Με την εντολή echo τυπώνουμε το μήνυμα που θέλουμε. Αυτό γίνεται όταν εκτελείται το πρόγραμμα χωρίς καμία παράμετρο.
fi	
